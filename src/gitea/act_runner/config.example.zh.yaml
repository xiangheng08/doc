# 示例配置文件，可以安全地将其复制为默认配置文件而无需任何修改。

# 您不必将此文件复制到您的实例中，
# 只需运行 `./act_runner generate-config > config.yaml` 即可生成配置文件。

log:
  # 日志级别，可以是 trace、debug、info、warn、error、fatal
  level: info

runner:
  # 存储注册结果的位置。
  file: .runner
  # 同时执行多少个任务。
  capacity: 1
  # 运行作业时的额外环境变量。
  envs:
    A_TEST_ENV_NAME_1: a_test_env_value_1
    A_TEST_ENV_NAME_2: a_test_env_value_2
  # 从文件中获取运行作业的额外环境变量。
  # 如果文件为空或不存在，则会忽略该文件。
  env_file: .env
  # 作业完成的超时时间。
  # 请注意，Gitea 实例也有一个超时时间（默认为3小时）。
  # 如果 Gitea 实例的超时时间短于此时间，则作业可能会被 Gitea 实例停止。
  timeout: 3h
  # 关闭时等待运行作业完成的超时时间。
  # 任何在此超时时间后仍未完成的运行作业将被取消。
  shutdown_timeout: 0s
  # 是否跳过验证 Gitea 实例的 TLS 证书。
  insecure: false
  # 从 Gitea 实例获取作业的超时时间。
  fetch_timeout: 5s
  # 从 Gitea 实例获取作业的间隔时间。
  fetch_interval: 2s
  # 运行器的标签用于确定运行器可以运行哪些作业以及如何运行它们。
  # 例如："macos-arm64:host" 或 "ubuntu-latest:docker://docker.gitea.com/runner-images:ubuntu-latest"
  # 在 https://gitea.com/docker.gitea.com/runner-images 找到更多 Gitea 提供的镜像。
  # 如果在注册时为空，将要求输入标签。
  # 如果在执行 `daemon` 时为空，将使用 `.runner` 文件中的标签。
  labels:
    - "ubuntu-latest:docker://docker.gitea.com/runner-images:ubuntu-latest"
    - "ubuntu-22.04:docker://docker.gitea.com/runner-images:ubuntu-22.04"
    - "ubuntu-20.04:docker://docker.gitea.com/runner-images:ubuntu-20.04"

cache:
  # 启用缓存服务器以使用 actions/cache。
  enabled: true
  # 存储缓存数据的目录。
  # 如果为空，缓存数据将存储在 $HOME/.cache/actcache 中。
  dir: ""
  # 缓存服务器的主机地址。
  # 这不是要监听的地址，而是作业容器连接的地址。
  # 因此 0.0.0.0 是一个错误的选择，留空以自动检测。
  host: ""
  # 缓存服务器的端口。
  # 0 表示使用随机可用端口。
  port: 0
  # 外部缓存服务器 URL。仅在启用时有效。
  # 如果指定，act_runner 将使用此 URL 作为 ACTIONS_CACHE_URL，而不是自己启动服务器。
  # URL 通常以 "/" 结尾。
  external_server: ""

container:
  # 指定容器将连接的网络。
  # 可以是 host、bridge 或自定义网络的名称。
  # 如果为空，act_runner 将自动创建一个网络。
  network: ""
  # 启动任务容器时是否使用特权模式（Docker-in-Docker 需要特权模式）。
  privileged: false
  # 容器启动时要使用的其他选项（例如，--add-host=my.gitea.url:host-gateway）。
  options:
  # 作业工作目录的父目录。
  # 注意：无需添加路径的第一个 '/'，因为 act_runner 会自动添加。
  # 如果路径以 '/' 开头，'/' 将被删除。
  # 例如，如果父目录是 /path/to/my/dir，则 workdir_parent 应该是 path/to/my/dir
  # 如果为空，将使用 /workspace。
  workdir_parent:
  # 可以将卷（包括绑定挂载）挂载到容器。支持 Glob 语法，参见 https://github.com/gobwas/glob
  # 您可以指定多个卷。如果序列为空，则无法挂载任何卷。
  # 例如，如果您只允许容器挂载 `data` 卷和 `/src` 中的所有 json 文件，您应该将配置更改为：
  # valid_volumes:
  #   - data
  #   - /src/*.json
  # 如果您想允许任何卷，请使用以下配置：
  # valid_volumes:
  #   - '**'
  valid_volumes: []
  # 使用指定的 docker 客户端主机覆盖默认设置。
  # 如果为空，act_runner 将自动查找可用的 docker 主机。
  # 如果为 "-"，act_runner 将自动查找可用的 docker 主机，但 docker 主机不会挂载到作业容器和服务容器。
  # 如果不为空或不为 "-"，将使用指定的 docker 主机。如果不起作用，将返回错误。
  docker_host: ""
  # 即使已存在也拉取 docker 镜像
  force_pull: true
  # 即使已存在也重新构建 docker 镜像
  force_rebuild: false

host:
  # 作业工作目录的父目录。
  # 如果为空，将使用 $HOME/.cache/act/。
  workdir_parent:
